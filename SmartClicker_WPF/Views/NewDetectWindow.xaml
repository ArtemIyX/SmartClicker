<Window x:Class="SmartClicker_WPF.Views.NewDetectWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SmartClicker_WPF.Views"
        xmlns:vm="clr-namespace:SmartClicker_WPF.ViewModels"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i = "http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:mm="clr-namespace:SmartClicker_WPF.Models"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        ResizeMode="CanResize"
        d:DataContext="{d:DesignInstance Type=vm:NewDetectVM}"
        Title="New ad detection" 
        Height="350" Width="400"
        MinHeight="350" MinWidth="400">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="2">
                <TextBlock Text="Type"/>
                <ComboBox ItemsSource="{Binding DetectTypes}" SelectedIndex="{Binding SelectedDetectTypeIndex}"/>
            </StackPanel>
            <TextBlock Text="Values" Grid.Row="1"/>
            <Border Background="{DynamicResource MaterialDesignChipBackground}" 
                            CornerRadius="10"
                    Grid.Row="2">
                <ListBox ItemsSource="{Binding Values}" Margin="4"
                         SelectedIndex="{Binding SelectedValueIndex}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type mm:DetectValue}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button     Grid.Column="0"
                                            Command="{Binding DataContext.RemoveValueCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding}"
                                            VerticalAlignment="Center" 
                                            Margin="2" Width="16" Height="16" 
                                            Style="{DynamicResource MaterialDesignIconButton}">
                                    <TextBlock Text="X" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Button>
                                <TextBox Grid.Column="1" 
                                         Style="{DynamicResource MaterialDesignFilledTextBox}" 
                                         Text="{Binding Header}" 
                                         Margin="2" VerticalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
            </Border>
            <StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Right" Grid.Row="3">
                <TextBox md:HintAssist.Hint="Value" 
                             Width="100"
                             VerticalAlignment="Center" 
                             Margin="3"
                             Text="{Binding NewValue, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Command="{Binding AddNewValueCommand}">
                    <TextBlock Text="Add" FontSize="12"/>
                </Button>
            </StackPanel>

        </Grid>
        
    </Grid>
</Window>
